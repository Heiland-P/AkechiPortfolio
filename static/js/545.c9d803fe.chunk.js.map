{"version":3,"file":"static/js/545.c9d803fe.chunk.js","mappings":"sPAyHA,QA5GA,SAAoBA,GAAiC,IAAhC,WAAEC,EAAU,cAAEC,GAAeF,EAEhD,MAAMG,GAAUC,EAAAA,EAAAA,MAETC,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,IAClDC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,OAClCG,EAAiBC,IAAsBJ,EAAAA,EAAAA,UAAS,MAgCvD,IA9BAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAmBC,EAAUC,MAAMC,GAAMA,EAAEC,KAAOhB,IACxDQ,EAAYI,EAAiB,GAC5B,CAACZ,KAEJW,EAAAA,EAAAA,YAAU,KACR,GAAIJ,EAAU,CACZ,MAAMU,EAAcV,EAASW,MAAMd,GACnC,QAAO,KAAMa,EAAYE,cACtBC,MAAMC,GAAUX,EAAmBW,EAAMC,WACzCC,OAAOC,IACNC,QAAQD,MAAM,kCAAmCA,GACjDd,EAAmB,KAAK,GAE9B,IACC,CAACH,EAAUH,KAWdO,EAAAA,EAAAA,YAAU,KACRT,EAAQwB,MAAM,QAAQ,GACtB,CAACxB,KAEEK,EAAU,OAAO,KAEtB,MAAMU,EAAcV,EAASW,MAAMd,GAInC,OAFAqB,QAAQE,IAAIlB,IAGVmB,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,oBACVC,QAtBmBC,KACjB7B,EAAmBG,EAASW,MAAMgB,OAAS,EAC7C7B,EAAoBD,EAAmB,IAEvCH,IACAC,EAAQwB,MAAM,QAChB,EAiBES,SAAU,CACRC,MAAO,CAAEC,QAAS,GAClBC,KAAM,CAAED,QAAS,IAEnBE,QAASrC,EACTsC,QAAS,CAAEH,QAAS,GACpBI,WAAY,CAAEC,SAAU,IAAMC,SAAA,EAE9BC,EAAAA,EAAAA,KAAA,OAAKb,UAAU,aACfH,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CAACC,UAAU,KAAKS,QAAS,CAAEK,GAAI,KAAON,QAAS,CAAEM,EAAG,GAAIF,SAAA,EACjEC,EAAAA,EAAAA,KAAA,OAAKb,UAAU,QAAQe,IAAKC,EAAMC,IAAI,UACtCJ,EAAAA,EAAAA,KAAA,OAAKb,UAAU,SAAQY,SAAE3C,QAE3B4C,EAAAA,EAAAA,KAACf,EAAAA,EAAOoB,IAAG,CACTlB,UAAU,eACVe,IAAKI,EACLF,IAAI,OACJT,QAAS,CACPM,EAAG,CAAC,GAAI,GAAI,GACZM,EAAG,CAAC,EAAG,GAAI,IAEbX,QAAS,CACPK,EAAG,EACHM,EAAG,GAELV,WAAY,CACVW,KAAM,QACNC,OAAQC,IACRC,WAAY,SACZb,SAAU,IACVc,KAAM,gBAIV5B,EAAAA,EAAAA,MAACC,EAAAA,EAAOC,IAAG,CACTC,UAAU,aACVS,QAAS,CAAEW,EAAG,KACdZ,QAAS,CAAEY,EAAG,GAAIR,SAAA,EAElBC,EAAAA,EAAAA,KAAA,OAAKb,UAAU,cAAce,IAAKrC,EAAiBuC,IAAI,gBACvDJ,EAAAA,EAAAA,KAAA,OAAKb,UAAU,wBAAuBY,SAAE1B,EAAYwC,QACpDb,EAAAA,EAAAA,KAACf,EAAAA,EAAOoB,IAAG,CACTlB,UAAU,eACVe,IAAKY,EACLV,IAAI,OACJR,QAAS,CAAEmB,MAAO,GAClBpB,QAAS,CAAEoB,MAAO,CAAC,EAAG,IAAK,IAC3BlB,WAAY,CACVW,KAAM,QACNC,OAAQC,IACRC,WAAY,SACZb,SAAU,GACVc,KAAM,oBAMlB,C","sources":["components/DialogueBox copy.js"],"sourcesContent":["import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { motion, useAnimationControls } from \"framer-motion\";\r\n\r\nimport dialogues from \"../assets/dialogues.json\";\r\n\r\nimport \"../css/DialogueBoxStyle.css\";\r\nimport \"../css/GeneralStyle.css\";\r\n\r\nimport decoImg from \"../assets/image/Dialogue_deco.png\";\r\nimport Icon from \"../assets/image/Dialogue_Icon.png\";\r\nimport IDBg from \"../assets/image/DialogueID_gb.png\";\r\n\r\nfunction DialogueBox({ dialogueId, onDialogueEnd }) {\r\n  \r\n  const control = useAnimationControls();\r\n\r\n  const [currentLineIndex, setCurrentLineIndex] = useState(0);\r\n  const [dialogue, setDialogue] = useState(null);\r\n  const [backgroundImage, setBackgroundImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const selectedDialogue = dialogues.find((d) => d.id === dialogueId);\r\n    setDialogue(selectedDialogue);\r\n  }, [dialogueId]);\r\n\r\n  useEffect(() => {\r\n    if (dialogue) {\r\n      const currentLine = dialogue.lines[currentLineIndex];\r\n      import(`../${currentLine.background}`)\r\n        .then((image) => setBackgroundImage(image.default))\r\n        .catch((error) => {\r\n          console.error(\"Error loading background image:\", error);\r\n          setBackgroundImage(null);\r\n        });\r\n    }\r\n  }, [dialogue, currentLineIndex]);\r\n\r\n  const handleNextLine = () => {\r\n    if (currentLineIndex < dialogue.lines.length - 1) {\r\n      setCurrentLineIndex(currentLineIndex + 1);\r\n    } else {\r\n      onDialogueEnd();\r\n      control.start(\"exit\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    control.start(\"enter\");\r\n  },[control]);\r\n\r\n  if (!dialogue) return null;\r\n\r\n  const currentLine = dialogue.lines[currentLineIndex];\r\n\r\n  console.log(backgroundImage);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"DialogueContainer\"\r\n      onClick={handleNextLine}\r\n      variants={{\r\n        enter: { opacity: 1 },\r\n        exit: { opacity: 0 },\r\n      }}\r\n      animate={control}\r\n      initial={{ opacity: 0 }}\r\n      transition={{ duration: 0.3 }}\r\n    >\r\n      <div className=\"BgColor\"></div>\r\n      <motion.div className=\"ID\" initial={{ x: -100 }} animate={{ x: 0 }}>\r\n        <img className=\"IDImg\" src={IDBg} alt=\"icon\" />\r\n        <div className=\"IDText\">{dialogueId}</div>\r\n      </motion.div>\r\n      <motion.img\r\n        className=\"DialogueDeco\"\r\n        src={decoImg}\r\n        alt=\"deco\"\r\n        animate={{\r\n          x: [0, -10, 0],\r\n          y: [0, 10, 0],\r\n        }}\r\n        initial={{\r\n          x: 0,\r\n          y: 0,\r\n        }}\r\n        transition={{\r\n          type: \"tween\",\r\n          repeat: Infinity,\r\n          repeatType: \"mirror\",\r\n          duration: 1.5,\r\n          ease: \"easeInOut\",\r\n        }}\r\n      />\r\n\r\n      <motion.div\r\n        className=\"DialogueBg\"\r\n        initial={{ y: 100 }}\r\n        animate={{ y: 0 }}\r\n      >\r\n        <img className=\"DialogueImg\" src={backgroundImage} alt=\"background\" />\r\n        <div className=\"DialogueText BodyText\">{currentLine.text}</div>\r\n        <motion.img\r\n          className=\"DialogueIcon\"\r\n          src={Icon}\r\n          alt=\"icon\"\r\n          initial={{ scale: 1 }}\r\n          animate={{ scale: [1, 1.1, 1] }}\r\n          transition={{\r\n            type: \"tween\",\r\n            repeat: Infinity,\r\n            repeatType: \"mirror\",\r\n            duration: 0.5,\r\n            ease: \"easeInOut\",\r\n          }}\r\n        />\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport default DialogueBox;\r\n"],"names":["_ref","dialogueId","onDialogueEnd","control","useAnimationControls","currentLineIndex","setCurrentLineIndex","useState","dialogue","setDialogue","backgroundImage","setBackgroundImage","useEffect","selectedDialogue","dialogues","find","d","id","currentLine","lines","background","then","image","default","catch","error","console","start","log","_jsxs","motion","div","className","onClick","handleNextLine","length","variants","enter","opacity","exit","animate","initial","transition","duration","children","_jsx","x","src","IDBg","alt","img","decoImg","y","type","repeat","Infinity","repeatType","ease","text","Icon","scale"],"sourceRoot":""}